generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Size {
  XS
  S
  M
  L
  XL
}

model Admin {
  id                 String    @id @default(cuid())
  firstname          String
  lastname           String
  email              String    @unique
  password           String
  resetPwToken       String?
  resetPwTokenExpiry DateTime?
}

model User {
  id                 String    @id @default(cuid())
  firstname          String
  lastname           String
  email              String    @unique
  password           String
  reviews            Review[]
  resetPwToken       String?
  resetPwTokenExpiry DateTime?
  createdAt          DateTime  @default(now())
}

model Product {
  id            String                 @id @default(cuid())
  name          String
  price         Int
  description   String
  sizes         Size[]
  images        ProductImage[]
  stock         Int                    @default(0)
  reviews       Review[]
  subCategories SubCategoryToProduct[]
  createdAt     DateTime               @default(now())
  updatedAt     DateTime               @updatedAt
}

model Category {
  id            String         @id @default(cuid())
  name          String
  image         CategoryImage?
  subCategories SubCategory[]
}

model SubCategory {
  id         String                 @id @default(cuid())
  name       String
  category   Category               @relation(fields: [categoryId], references: [id])
  categoryId String
  image      SubCategoryImage?
  products   SubCategoryToProduct[]
}

model SubCategoryToProduct {
  id            String      @id @default(cuid())
  subCategory   SubCategory @relation(fields: [subCategoryId], references: [id])
  subCategoryId String
  product       Product     @relation(fields: [productId], references: [id])
  productId     String
}

model ProductImage {
  id        String  @id @default(cuid())
  public_id String
  url       String
  product   Product @relation(fields: [productId], references: [id])
  productId String
}

model CategoryImage {
  id         String   @id @default(cuid())
  public_id  String
  url        String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String   @unique
}

model SubCategoryImage {
  id         String      @id @default(cuid())
  public_id  String
  url        String
  category   SubCategory @relation(fields: [categoryId], references: [id])
  categoryId String      @unique
}

model Review {
  id        String  @id @default(cuid())
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  product   Product @relation(fields: [productId], references: [id])
  productId String
  rating    Int
  comment   String?
}
